
Code 01:
#include<stdio.h>
int main()
{
    int n;
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
    {
        if(i%2==1)
            printf("1");
        else if(i%2==0)
            printf("0");
        if(i<n)
            printf(",");
    }
}



Code 02:
#include <stdio.h>
int main() {
    int n, reverse = 0, remainder;
    scanf("%d", &n);
    while (n != 0) {
        remainder = n % 10;
        reverse = reverse * 10 + remainder;
        n /= 10;
    }
    printf("%d", reverse);
    return 0;
}



Code 03:
#include<stdio.h>

    int main()
    {
    int n,f=1,i;

    printf("Enter an integer: ");
    scanf("%d",&n);

    if (n < 0)
    printf("Error! Factorial of a negative number doesn't exist.");
    else {
    for(i=1;i<=n;i++)
    {
    f=f*i;
    }
    printf("Factorial of %d = %d", n, f);
        }
    return 0;
    }


Code 04:
#include <stdio.h>
int main() {
  int n, i, a = 0;
  printf("Enter a positive integer: ");
  scanf("%d", &n);

  for (i = 2; i <= n / 2; ++i) {

    if (n % i == 0) {
      a = 1;
      break;
    }
  }

  if (n == 0 || n == 1) {
    printf("%d is neither prime nor composite.", n);
  }
  else {

    if (a == 0)
      printf("%d is a prime number.", n);
    else
      printf("%d is not a prime number.", n);
  }

  return 0;
}



Code 05:
#include <stdio.h>
int main()
{
  int n, c, d, a[100], b[100];

  printf("Enter the number of elements in array: ");
  scanf("%d", &n);

  printf("Enter array elements: \n");

  for (c = 0; c < n ; c++)
    scanf("%d", &a[c]);

  for (c = n - 1, d = 0; c >= 0; c--, d++)
    b[d] = a[c];

  for (c = 0; c < n; c++)
    a[c] = b[c];

  printf("The array after reversal:\n");

  for (c = 0; c < n; c++)
    printf("%d\n", a[c]);

  return 0;
}



Code 06:
#include<stdio.h>
int main()
{
   int a[100], n, element, pos=0;
   int i;

   printf("Enter size of array: ");
   scanf("%d", &n);

   printf("Enter array elements: ");
   for(i=0; i<n; i++)scanf("%d", &a[i]);

   printf("Enter element to search: ");
   scanf("%d",&element);

   for(i=0; i<n; i++)
   {
     if(a[i]==element)
     {
       printf("%d found at position %d", element, i+1);
       return 0;
     }
   }

   printf("%d not found.", element);
   return 0;
}


Code 07:
#include<stdio.h>
int main()
{
    int n;

    printf("Enter the Number: ");
    scanf("%d",&n);
    
    for(int j=1;j<=n;j++)
    {
        for(int i=1;i<=n;i++)
        {
            if(j%2==1)
            {
            if(i%2==1)
                printf("1");
            else if(i%2==0)
                printf("0");
            }
            else
            if(i%2==1)
                printf("0");
            else if(i%2==0)
                printf("1");
        }
        printf("\n");
    }
}


Code 08:
#include<stdio.h>
int main()
{
    int arr[10][10],m,n;

    printf("Enter the Numbers: \n");
    scanf("%d %d",&m,&n);

    for(int i=0;i<m;i++)
        for(int j=0;j<n;j++)
            scanf("%d",&arr[i][j]);
    printf("Row wise: ");
    for(int i=0;i<m;i++)
        for(int j=0;j<n;j++)
            printf("%d",arr[i][j]);
    printf("\nColumn wise: ");
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            printf("%d",arr[j][i]);
}


Code 09:
#include <stdio.h>
#include <string.h>
int main()
{
   char arr[100];

   printf("Enter a string to reverse: ");
   gets(arr);

   strrev(arr);

   printf("Reverse of the string: %s ", arr);

   return 0;
}


Code 10:
#include<stdio.h>
#include<string.h>
int main()
{
    char inputString[100];
    int stringLength;
    printf("Input a string: ");
    fgets(inputString, sizeof inputString, stdin);
    stringLength = strlen(inputString);
    stringLength -= 1;
    for(int outerCharIndex=1;outerCharIndex<stringLength;outerCharIndex++)
    {
        for(int innerCharIndex=0;innerCharIndex<stringLength-outerCharIndex;innerCharIndex++)
        {
            if(inputString[innerCharIndex]>inputString[innerCharIndex+1])
            {
                char charCopy = inputString[innerCharIndex];
                inputString[innerCharIndex] = inputString[innerCharIndex+1];
                inputString[innerCharIndex+1]=charCopy;
            }
        }
    }
    printf("Sorted in ascending order: ");
    printf("%s",inputString);
}


Code 11:
#include <stdio.h>
#include <string.h>

int FindFrequency(char* str, char* word)
{
    int len = 0;
    int wlen = 0;
    int cnt = 0;
    int flg = 0;

    int i = 0;
    int j = 0;

    len = strlen(str);
    wlen = strlen(word);

    for (i = 0; i <= len - wlen; i++) {

        flg = 1;
        for (j = 0; j < wlen; j++) {
            if (str[i + j] != word[j]) {
                flg = 0;
                break;
            }
        }

        if (flg == 1)
            cnt++;
    }

    return cnt;
}

int main()
{
    char str[64];
    char word[16];

    int count = 0;

    printf("Enter string: ");
    scanf("%[^\n]s", str);

    printf("Enter word to be searched: ");
    scanf("%s", word);

    count = FindFrequency(str, word);

    printf("%d\n", count);

    return 0;
}


Code 12:
#include <stdio.h>


void swap(int * num1, int * num2);

int main()
{
    int num1, num2;

    /* Input numbers */
    printf("Enter two numbers: ");
    scanf("%d%d", &num1, &num2);

    
    printf("Before swapping in main n");
    printf("Value of num1 = %d \n", num1);
    printf("Value of num2 = %d \n\n", num2);

    swap(&num1, &num2);


    printf("After swapping in main n");
    printf("Value of num1 = %d \n", num1);
    printf("Value of num2 = %d \n\n", num2);

    return 0;
}


Code 13:
#include <stdio.h>
int main()
{
  int array[100], size, c, location = 0;

  printf("Enter number of elements in array\n");
  scanf("%d", &size);

  printf("Enter %d integers\n", size);

  for (c = 0; c < size; c++)
    scanf("%d", &array[c]);

  for (c = 1; c < size; c++)
    if (array[c] < array[location])
      location = c;

  printf("Minimum value: %d\n", array[location]);
  return 0;
}


Code 14:
#include <stdio.h>
#include <conio.h>
int main()
{
	int num,res=0;
	clrscr();
	printf("\nENTER A NUMBER: ");
	scanf("%d",&num);
	res=prime(num);
	if(res==0)
		printf("\n%d Prime",num);
	else
		printf("\n%d Not Prime",num);
	getch();
}
int prime(int n)
{
	int i;
	for(i=2;i<=n/2;i++)
	{
		if(n%i!=0)
			continue;
		else
			return 1;
	}
	return 0;
}


Code 15:
#include <stdio.h>

int str_length(char *str){
    int length = 0;
    while (str[length] != '\0'){
        length++;
    }
    return length;
}

int find_substr(char *a, char *b){
    int lengthA = str_length(a);
    int lengthB = str_length(b);

    if (lengthB > lengthA){
        char temp[50];
        strcpy(temp, a);
        strcpy(a, b);
        strcpy(b, temp);

        int lengthT = lengthA;
        lengthA = lengthB;
        lengthB = lengthT;
    }

    for (int i = 0; i < lengthA; i++){
        if (i + lengthB > lengthA){
            break;
        }
        int found = 1;
        for (int j = 0, k = i; j < lengthB; j++, k++){
            if (a[k] != b[j]){
                found = 0;
                break;
            }
        }
        if (found){
            return 1;
        }
    }
    return -1;
}

int main(){
    char a[50], b[50];
    scanf ("%s", a);
    scanf ("%s", b);
    printf ("%d\n", find_substr(a, b));
    return 0;
}



Code 16(a):
#include<stdio.h>
struct triangle
{
    int triangle_id;
    int base;
    int height;
};
void area(struct triangle t[]);

int main()
{
    struct triangle t[30];
    for(int i=0;i<3;i++){
        scanf("%d",&t[i].triangle_id);
        scanf("%d",&t[i].base);
        scanf("%d",&t[i].height);
    }
    area(t);
}
void area(struct triangle t[])
{
    int area1=(t[0].base*t[0].height)/2;
    int area2=(t[1].base*t[1].height)/2;
    int area3=(t[2].base*t[2].height)/2;
    if(area1>area2 && area1>area3)
        printf("Area of 1: %d",area1);
    else if(area2>area1 && area2>area3)
        printf("Area of 2: %d",area2);
    else
        printf("Area of 3: %d",area3);
}


Code 16(b):
#include<stdio.h>
struct player
{
    char name[50];
    char country[50];
    int run[30];
    int wicket[30];
    int point[30];
};

int main()
{
    int i;
    struct player shakib,tamim;
    gets(shakib.name);
    fflush(stdin);
    gets(shakib.country);
    fflush(stdin);
    for(i=0;i<3;i++){
            scanf("%d",&shakib.run[i]);
            if(shakib.run[i]<=25){
                shakib.point[i] = shakib.point[i] + 5;
            }else if(shakib.run[i]>25 && shakib.run[i]<=50){
                shakib.point[i] = shakib.point[i] + 10;
            }else if(shakib.run[i]>50 && shakib.run[i]<=75){
                shakib.point[i] = shakib.point[i] + 15;
            }else if(shakib.run[i]>75){
                shakib.point[i] = shakib.point[i] + 20;
            }
            shakib.point[i+1]=0;
        }
    for(i=0;i<3;i++){
            scanf("%d",&shakib.wicket[i]);
            shakib.point[i] = shakib.point[i] + shakib.wicket[i]*12;
    }
    fflush(stdin);
    gets(tamim.name);
    fflush(stdin);
    gets(tamim.country);
    fflush(stdin);
    for(i=0;i<3;i++){
            scanf("%d",&tamim.run[i]);
            if(tamim.run[i]<=25){
                tamim.point[i] = tamim.point[i] + 5;
            }else if(tamim.run[i]>25 && tamim.run[i]<=50){
                tamim.point[i] = tamim.point[i] + 10;
            }else if(tamim.run[i]>50 && tamim.run[i]<=75){
                tamim.point[i] = tamim.point[i] + 15;
            }else if(tamim.run[i]>75){
                tamim.point[i] = tamim.point[i] + 20;
            }tamim.point[i+1]=0;
        }

    for(i=0;i<3;i++){
            scanf("%d",&tamim.wicket[i]);
            tamim.point[i] = tamim.point[i] + tamim.wicket[i]*12;
    }

    for(i=0;i<3;i++){
        printf("\nMatch %d: Shakib Al Hasan Points: %d",i+1,shakib.point[i]);
        printf("\nMatch %d: Tamim Iqbal Points: %d",i+1,tamim.point[i]);
        printf("\n");
    }
}


Code 17:
#include<stdio.h>
struct student
{
    char name[50];
    char id[50];
    float cgpa;
};
int main()
{
    struct student s1;
    gets(s1.name);
    fflush(stdin);
    gets(s1.id);
    fflush(stdin);
    scanf("%f",&s1.cgpa);
}


Code 18:
#include<stdio.h>
int main()
{
   int array[] = {1,2,3,4,5,6,7};
   int sum;
   sum = sum_array_elements(array,6);
   printf("\nSum of array elements is:%d",sum);
   return 0;
}
int sum_array_elements( int arr[], int n ) {
   if (n < 0) {
     //base case:
     return 0;
   } else{
     //Recursion: calling itself
     return arr[n] + sum_array_elements(arr, n-1);
    }
}


Code 19:
#include<stdio.h>

int sumOfRange(int);

int main()
{
   int a;
   int sum;

   printf(" Input the last number of the range starting from 1 : ");
   scanf("%d", &a);

   sum = sumOfRange(a);
   printf("The sum of numbers from 1 to %d : %d\n\n", a, sum);

   return (0);
}

int sumOfRange(int a)
{
   int res;
   if (a == 1)
   {
      return (1);
   } else
   {
      res = a + sumOfRange(a - 1); 
   }
   return (res);
}



Code 20:
#include<stdio.h>

int Fibonacci(int);

int main()
{
   int n, i = 0, a;

   scanf("%d",&n);

   printf("Fibonacci series\n");

   for ( a = 1 ; a <= n ; a++ )
   {
      printf("%d\n", Fibonacci(i));
      i++;
   }

   return 0;
}

int Fibonacci(int n)
{
   if ( n == 0 )
      return 0;
   else if ( n == 1 )
      return 1;
   else
      return ( Fibonacci(n-1) + Fibonacci(n-2) );
}


Code 21:
#include<stdio.h>
int main()
{
    FILE *fpoutput;

    fpoutput = fopen("sample.txt","w");

        fprintf(fpoutput,"1 Zahid\n");
        fprintf(fpoutput,"2 Tanvir\n");
        fprintf(fpoutput,"3 Akif\n");

    fclose(fpoutput);
}
